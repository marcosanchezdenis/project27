<?php

/**
 * Model_Pregunta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Model_Pregunta extends Model_Base_Pregunta
{
    public function getOpciones()
    {
        if ($this->PreguntaSm == false) {
            return false;
        }
    
        return array_map(function ($seleccion) {
            return $seleccion->getOpciones();
        }, $this->PreguntaSm->getData());
    }
    
    public function getPromedio($respuestas, $departamento, $dpto)
    {
        $cnt_respuestas = 0;
		$asterisk = "";
        $total_respuestas = array_reduce(
            $this->RespDetalle->getData(), 
            function ($total, $respuesta) use ($respuestas, $departamento, $dpto, &$cnt_respuestas, &$asterisk) {
                if (!$departamento && in_array($respuesta->respuesta_id, $respuestas)) {
					if($respuesta->EscalaValor->valor == 9){ //SI ES NO APLICA
						$asterisk = "*";
						return $total;
					}
                    $valor = $respuesta->EscalaValor->valor;
                    $cnt_respuestas++;
                    return $total + $valor;
                } elseif ($departamento) {
                    if ($respuesta->Respuesta->EncParticular->Asignatura->Carrera->departamento_id === $dpto){
						if($respuesta->EscalaValor->valor == 9){ //SI ES NO APLICA
							$asterisk = "*";
							return $total;
						}
                        $valor = $respuesta->EscalaValor->valor;
                        $cnt_respuestas++;
                        return $total + $valor;
                    }
                }
                return $total;
            },
            0
        );
        
        //return round($total_respuestas / $cnt_respuestas, 2); //ANTES HABIA ESTO, PERO VALERIA PIDE QUE SEA TRUNCADO
		//COMO TRUNCAR CON PHP: http://stackoverflow.com/questions/10643273/no-truncate-function-in-php-options
		$prom = floor($total_respuestas / $cnt_respuestas * 100) / 100;

		return array($prom, $asterisk);
    }
    
    public function getEstructura()
    {
        return array(
            "pregunta_id"	  => $this->pregunta_id,
            "pregunta"        => $this->pregunta,
            "descripcion"     => $this->descripcion,
            "tipo"            => $this->tipo,
            "es_obligatoria"  => $this->es_obligatoria,
            "opcion_multiple" => $this->opcion_multiple,
            "orden"           => $this->orden,
            "Opciones"        => $this->getOpciones(),
        );
    }
    
    public function getPuntajes($respuestas, $departamento, $dpto)
    {
		$prom = $this->getPromedio($respuestas, $departamento, $dpto);

        $puntajes = array(
            "pregunta_id" => $this->pregunta_id,
            "pregunta"    => $this->pregunta,
            "descripcion" => $this->descripcion,
            "orden"       => $this->orden,
            "promedio"    => $prom[0],
            "asterisk"    => $prom[1],
        );
        
        $puntajes["nota"] = $this->getNota($puntajes['promedio']) . $puntajes["asterisk"] ;
        return $puntajes;
    }
    
    public function getNota($promedio)
    {
        if ($promedio <= 2.0) {
            return "Deficitario";
        } elseif ($promedio <= 2.6) {
            return "Insuficiente";
        } elseif ($promedio <= 3.2) {
            return "Aceptable";
        } elseif ($promedio <= 3.7) {
            return "Bueno";
        } else {
            return "Excelente";
        }
    }
    
    public function addOrden($padre)
    {
        if ($this->orden == null || $this->orden == "") {
	    	if ($padre == "categoria") {
	    	    $categoriaPadre = $this->Categoria;
	    	    $this->orden = $categoriaPadre->getNextPregunta();
	    	} else {
	    	    $encuestaPadre = $this->Encuesta;
	    		$this->orden = $encuestaPadre->getNextPregunta();
	    	}
    	}
    }
    
    public function borrar()
    {
    	foreach ($this->PreguntaSm as $sm) {
    		$sm->borrar();
    	}
    	
    	$this->delete();
    }
}